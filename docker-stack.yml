services:
  postgres: # DNS resolves to this container name NOT the image or `container_name`
    image: postgres
    networks:
      - ocr-net
    volumes:
      - pg_data:/var/lib/ocr/postgresql/data
    secrets:
      - POSTGRES_PASSWORD
    environment:
      POSTGRES_DB: ocr_db # Database name
      POSTGRES_USER: admin
      # POSTGRES image as specific implementation to read the password from the file
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ocr_db -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5
  migrations:
    image: justinfay501/ocr-migrations:${GIT_COMMIT_HASH-latest} # Image name
    networks:
      - ocr-net
    depends_on:
      - postgres
    secrets:
      - POSTGRES_PASSWORD
    environment:
      POSTGRES_USER: admin
      POSTGRES_DB: ocr_db
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
    deploy: # Only run one instance of the migrations
      placement:
        max_replicas_per_node: 1
      restart_policy:
        condition: none
  api:
    image: justinfay501/ocr-api:${GIT_COMMIT_HASH-latest} # Image name
    networks:
      - ocr-net
    # Traefik labels
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`eremos.cloud`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.api.loadbalancer.server.port=8080"

      # Data Dog Log Integration
      - 'com.datadoghq.ad.logs=[{"source": "dotnet-api" , "service": "api"}]'
    secrets:
      - DI_KEY
      - DI_ENDPOINT
      - POSTGRES_PASSWORD
    environment:
      # Adding secrets will create a file in the container with the secret value
      # This name will be read by a Util class to egt the value
      # we cannot pass /run/secrets/POSTGRES_PASSWORD because it will just pass the file path
      DI_KEY_FILE: /run/secrets/DI_KEY
      DI_ENDPOINT_FILE: /run/secrets/DI_ENDPOINT
      # Can't use the docker secret directly in the environment variable
      # Because it will just use the file path
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
      OCR_STORAGE_PATH: ocr_storage:/var/lib/ocr/ocr_storage
    depends_on:
      # Swarm doesn't support adding a condition to the service yet
      # https://github.com/docker/cli/issues/3880?reload=1
      - postgres
      - migrations

    deploy: # Rolling release (Blue Green Deployment)
      update_config:
        order: start-first
    volumes:
      - ocr_storage:/var/lib/ocr/ocr_storage
secrets:
  POSTGRES_PASSWORD:
    # Must be created use `docker secret create POSTGRES_PASSWORD <file>`
    external: true
  DI_KEY:
    external: true
  DI_ENDPOINT:
    external: true

volumes:
  pg_data:
  ocr_storage:

networks:
  ocr-net:
    external: true
